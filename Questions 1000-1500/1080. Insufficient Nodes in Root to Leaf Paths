#written in python


# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def largestValues(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        if not root:
            return []
        values = {}
        self.find_largest_vals(root, values, 0)
        
        #change dictionary values to a list and return
        depth = max(values.keys())
        res = []
        for i in range(depth + 1):
            res.append(values[i])
        return res
        
        
    def find_largest_vals(self, node, values, level):
        if not node:
            return
        if level not in values:
            values[level] = node.val
        elif node.val > values[level]:
            values[level] = node.val
        
        self.find_largest_vals(node.left, values, level + 1)
        self.find_largest_vals(node.right, values, level + 1)
