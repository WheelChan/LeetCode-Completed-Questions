//done in C++
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* result = new ListNode(0);
        ListNode* curr = result;
        int val1, val2, temp, adjusted;
        int carry_over = 0;

        while (l1 != nullptr || l2 != nullptr || carry_over) {
            if (l1 == NULL) {
                val1 = 0;
            } else {
                val1 = l1 -> val;
            }
            if (l2 == NULL) {
                val2 = 0;
            } else {
                val2 = l2 -> val;
            }
            temp = val1 + val2 + carry_over;
            if (temp > 9) {
                adjusted = temp - 10;
                carry_over = 1;
                curr -> next = new ListNode(adjusted);
                curr = curr -> next;
            } else {
                carry_over = 0;
                curr -> next = new ListNode(temp);
                curr = curr -> next;
            }
            
            if (l1) {
                l1 = l1 -> next;
            }
            if (l2) {
                l2 = l2 -> next;
            }
        }

        return result -> next;
    }
};

